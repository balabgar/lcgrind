//1. Two Sum Problem
class Solution {
    public int[] twoSum(int[] nums, int target) {

       Map<Integer,Integer> map = new HashMap<>();
       for(int i=0;i<nums.length;i++){
          map.put(nums[i],i);
       }
        for(int i=0;i<nums.length;i++) {
            int comp = target - nums[i];
            if(map.containsKey(comp) && map.get(comp)!=i) {
                return new int[] {i,map.get(comp)};
            }
       }
    return new int[]{};
    }
}

//2. Valid paranthesis

class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
         for(int i=0;i<s.length();i++){
            char ch=s.charAt(i);
            if(ch=='('||ch=='['||ch=='{')
              stack.push(ch);
            else {
            if(stack.isEmpty())
               return false;
            char top=stack.pop();
            if((ch==')'&&top!='(')
                    ||(ch==']'&&top!='[')
                    ||(ch=='}'&&top!='{'))
             return false;
         }
         }
    return stack.isEmpty();
    }
}
